---
- import_tasks: setup_env.yml
- import_tasks: deploy_version.yml
  when: version_changed or loader_changed
- import_tasks: deploy_mods.yml
  when: not (version_changed or loader_changed)

- name: Ensure service enabled
  systemd:
    name: "{{ service_name }}"
    enabled: true

- name: Reload systemd (always)
  systemd:
    daemon_reload: true

- name: Restart service (single)
  systemd:
    name: "{{ service_name }}"
    state: restarted
    no_block: true

- name: Initial delay before healthcheck
  pause:
    seconds: "{{ post_start_grace | int }}"

- block:
    - name: Healthcheck - curl until ready
      shell: 'curl -s -o /dev/null -w "%{http_code}" "http://{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}:{{ server_port }}"'
      register: hc_ready_always
      delegate_to: localhost
      become: false
      retries: "{{ healthcheck_retries | default(((healthcheck_total_timeout | int) // (healthcheck_interval | int)) | int) }}"
      delay: "{{ healthcheck_interval | int }}"
      failed_when: false
      until: hc_ready_always.rc == 52
  rescue:
    - name: Ensure fetched_logs dir exists
      file:
        path: "./fetched_logs"
        state: directory
        mode: '0755'
      delegate_to: localhost
      become: false
    - fetch:
        src: "{{ current_link }}/logs/latest.log"
        dest: "./fetched_logs/latest-{{ ansible_date_time.iso8601_basic_short }}.log"
        flat: true
      ignore_errors: true
    - fail:
        msg: "Healthcheck failed after forced restart; logs in ./fetched_logs"
